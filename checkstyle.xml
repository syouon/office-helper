<?xml version="1.0" ?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="fileExtensions" value="java"/>

    <module name="NewlineAtEndOfFile"/>

    <module name="FileTabCharacter"/>

    <!--Check if duplicate keys are present-->
    <module name="UniqueProperties"/>

    <module name="TreeWalker">
        <!--Force camel-case on all identifiers (class, method, variable...) except if final and static are present-->
        <module name="AbbreviationAsWordInName">
            <property name="allowedAbbreviationLength" value="0"/>
            <message key="abbreviation.as.word"
                     value="Names cannot have two consecutive uppercase letters."/>
        </module>
        <!--Annotations must be on its own line-->
        <module name="AnnotationLocation">
            <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
        </module>
        <!--Force java style array type definition-->
        <module name="ArrayTypeStyle"/>
        <!--Check comment indentation-->
        <module name="CommentsIndentation"/>
        <!--Force default last in switch-->
        <module name="DefaultComesLast"/>
        <!--Force to implement hashCode with equals-->
        <module name="EqualsHashCode"/>
        <!--Check if useless initializing with default value are present-->
        <module name="ExplicitInitialization"/>
        <!--Check whitespaces around the Generic tokens (< and >) are correct to the convention-->
        <module name="GenericWhitespace"/>
        <!--Check good indentation according to Oracle-->
        <module name="Indentation">
            <property name="caseIndent" value="0"/>
        </module>
        <!--Force left curly braces to be at the end of line-->
        <module name="LeftCurly">
            <property name="ignoreEnums" value="false"/>
        </module>
        <!--Max line length is set to 120 characters -->
        <module name="LineLength">
            <property name="max" value="120"/>
        </module>
        <!--Check if magic numbers are present-->
        <module name="MagicNumber">
            <property name="ignoreAnnotation" value="true"/>
        </module>
        <!--Check if methods exceed 50 lines-->
        <module name="MethodLength">
            <property name="max" value="50"/>
        </module>
        <!--Check that no spaces are present between method name and left parenthesis -->
        <module name="MethodParamPad"/>
        <!--Always use default case in switch-->
        <module name="MissingSwitchDefault"/>
        <module name="ModifierOrder"/>
        <!--Check if the same string is present multiple times-->
        <module name="MultipleStringLiterals">
            <property name="ignoreStringsRegexp" value='^(("")|(", "))$'/>
        </module>
        <!--Force to have braces after if, else, for, while and do-while-->
        <module name="NeedBraces"/>
        <!--File name must match class name-->
        <module name="OuterTypeFilename"/>
        <!--All files should have a package declaration-->
        <module name="PackageDeclaration"/>
        <!--No space after left parenthesis and before right parenthesis-->
        <module name="ParenPad"/>
        <module name="RedundantImport"/>
        <module name="RedundantModifier"/>
        <module name="RightCurly"/>
        <!--Comma should end broken line -->
        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA"/>
        </module>
        <!--Dot should start broken line-->
        <module name="SeparatorWrap">
            <property name="option" value="nl"/>
            <property name="tokens" value="DOT"/>
        </module>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <!--Force to use equals when comparing strings-->
        <module name="StringLiteralEquality"/>
        <!--No space in type cast-->
        <module name="TypecastParenPad"/>
        <module name="UnnecessaryParentheses"/>
        <module name="UnusedImports"/>
        <!--Check long constants are defined with 'L' and not 'l'-->
        <module name="UpperEll"/>
        <!--Force whitespace after comma, semicolon, typecast, if, else, while, do-while and for-->
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!--Check names are well-formed-->
        <module name="ParameterName"/>
        <module name="ClassTypeParameterName"/>
        <module name="InterfaceTypeParameterName"/>
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName">
            <property name="allowOneCharVarInForLoop" value="true"/>
        </module>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="MethodTypeParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>
    </module>
</module>
